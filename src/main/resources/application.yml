host:
  49.235.67.7
###########################################################################################################
server:
  port: 8000 #服务的端口

logging:
  level:
    root: info  #日志的打印级别
    org.springframework: info

spring:
  boot:
    # 是否开启自动配置
    enableautoconfiguration: true

  #数据源配置
  datasource:
    # url: jdbc:mysql://localhost:3306/springbootlearn?useSSL=false&useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    url: jdbc:mysql://49.235.67.7:3306/springbootlearn?useSSL=false&useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    username: root
    password: 70baf77d7d80de7b
    #    name: jpa
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      connection-timeout: 300000
      idle-timeout: 100000
      validation-timeout: 600000
      connection-test-query: SELECT 1;

    #数据库脚本初始化
    data:
      - classpath:SpringBootLearnDML.sql
    #    data-username: ''      #执行DML时的用户名
    #    data-password: ''      #执行DML时的密码
    schema:
      - classpath:SpringBootLearnDDL.sql
    #    schema-username: '' # 执行DDL时的用户名
    #    schema-password: '' # 执行DML时的密码
    continue-on-error: true
    separator: ;
    initialization-mode: never   # always为始终执行初始化，embedded只初始化内存数据库（默认值）,如h2等，never为不执行初始化

  banner:
    location: banner.txt  #指定banner的文件位置

  jpa:
    show-sql: false #打印jpa的sql语句
    properties:
      hibernate:
        dialect: com.xqk.learn.framework.springboot.data.jpa.config.MyDialect
        enable_lazy_load_no_trans: true #解决懒加载时，缺少session的问题
        format_sql: true #格式化sql语句
        ddl_auto: false #生成数据库定义语句

  mvc:
    servlet:
      #mvc是否懒加载
      load-on-startup: 1
    # 静态资源路径
    static-path-pattern: /**

  #Multipart文件上传配置
  servlet:
    multipart:
      file-size-threshold: 0MB #当文件达到阀值时进行存储
      max-file-size: 200MB #最大文件大小
      max-request-size: 200MB #最大请求大小
      location: C:\\Users\\Public\\Downloads\\ #文件存放位置

  application:
    name: microservice-springbootlearn

  #flyway开关，相关配置在plugin中指定
  flyway:
    enabled: true #是否开启flyway
    locations: classpath:db/migration #sql脚本的位置，需要加classpath惹
    baseline-version: 1 #脚本的版本必须大于等于此配置，否则脚本不跑
    validate-on-migrate: false

  #使用一个profile时，同时也使用另外一个profile
  profiles:
    include:
#      - datasource
#      - quartz
#      - kafka
      - redis
#      - elasticsearch
#      - rabbitmq
      - feign
      - mybatis
#      - security
#      - debezium

  task:
    #  ThreadPoolTaskExecutor配置（@EnableAsync注解开启）TaskExecutionProperties
    execution:
      pool:
        core-size: 8  #核心线程数量
        max-size: 8 #当等待队列填满时，线程池可以扩大的数量
        queue-capacity: 1000 #等待的队列长度
        keep-alive: 50s #线程的最大空闲等待时长
        allow-core-thread-timeout: true #是否允许核心线程超时，可以实现线程池的动态增长和萎缩
      thread-name-prefix: aviator-task #自定义TaskExecutor线程名称

    #ThreadPoolScheduleExecutor配置（@EnableScheduling注解开启）TaskExecutionProperties
    scheduling:
      pool:
        size: 8 #允许的最大线程个数
      thread-name-prefix: aviator-scheduling #自定义TaskScheduling线程名称

  resources:
    # 静态资源位置
    static-locations: [ classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/ ]

  cache:
    redis:
      time-to-live: 100000
      cache-null-values: true
    type: redis

hibernate:
  properties:
    hibernate:
      types:
        print:
          banner: false #关闭hibernate-type的banner打印

##############################################微服务####################################
#info下的数据可以在actuator端点：info中进行展示
info:
  app:
    name: 熊乾坤
    age: 25

management:
  health:
    elasticsearch:
      enabled: false #是否开启elasticsearch健康检查
  endpoint:
    shutdown:
      enabled: true #开启actuator的shutdown端点
  endpoints:
    web:
      exposure:
        include: [ health,info,env,beans,mappings,info,metrics,dump,refresh ] #设置开启的Actuator节点，开启后的访问端点为http://localhost:8080/actuator/{endpoints}
#        include: * #设置开启所有的Actuator节点

#      cors:
#        allowed-origins: http://101.37.172.37:8080 #配置允许访问的地址
#        allowed-methods: GET,POST,DELETE,PUT #允许的Http方法

#微服务配置
eureka:
  client:
    enabled: true #关闭eureka